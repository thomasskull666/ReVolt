#!/system/bin/sh
#
# SS4N1 : ScreenState for Nexus One
# - location: /system/bin/ss4n1 
# - auto-switch settings for virtual memory, cpufreq governor, cpu scheduler and undervoltage based on screen-state (AWAKE/SLEEPING)
# - adapted from "screenstate_scaling" (FloHimself@xda) & "battery tweak" (collin_ph@xda)
# - by ch33kybutt@xda
# - 23:04 Tuesday, 24 May, 2011

# Initialize settings
. /system/etc/ss4n1.conf;

if [ $ENABLE_SS4N1 -ne 1 ];
then
	log -p i -t SS4N1 "*** DISABLED *** exiting...";
	exit;
fi;

# One-time tweaks to apply on every boot
#
# Remount all partitions with noatime
if [ $TWEAK_NOATIME -eq 1 ];
then
	PART=`mount | cut -d " " -f3`;
	for k in $PART;
	do
		sync;
		mount -o remount,noatime $k;
	done;
	log -p i -t SS4N1 "*** NOATIME *** remounted all partitions with noatime";
fi;

# Optimize non-rotating storage and i/o scheduler 
if [ $TWEAK_STORAGE -eq 1 ];
then
	LOOP=`ls -d /sys/block/loop*`;
	MMC=`ls -d /sys/block/mmc*`;
	MTD=`ls -d /sys/block/mtd*`;

	for i in $LOOP $MMC $MTD;
	do
		echo 256 > $i/queue/read_ahead_kb;
		echo 0 > $i/queue/rotational; 
		if [ -e $i/queue/iosched/back_seek_penalty ];
		then
			echo 1 > $i/queue/iosched/back_seek_penalty;
			echo 0 > $i/queue/iosched/slice_idle;
		elif [ -e $i/queue/iosched/fifo_batch ];
		then
			echo 1 > $i/queue/iosched/fifo_batch;
		fi;
	done;
	echo 3072 > /sys/devices/virtual/bdi/179:0/read_ahead_kb;
	log -p i -t SS4N1 "*** STORAGE *** applied storage and I/O tweaks";
fi;

if [ $TWEAK_UI -eq 1 ];
then
	setprop windowsmgr.max_events_per_sec 60;
	log -p i -t SS4N1 "*** UI *** applied UI/homescreen tweak";
fi;

if [ $DEWONKIFIER -eq 1 ];
then
	setprop media.a1026.enableA1026 0;
	log -p i -t SS4N1 "*** DEWONKIFIER *** disabled A1026 noise-cancelling mic";
else
	setprop media.a1026.enableA1026 1;
fi;

if [ $TWEAK_NETWORK -eq 1 ];
then
	setprop wifi.supplicant_scan_interval 180;
	setprop net.tcp.buffersize.default 4096,87380,174760,4096,16384,131072;
	setprop net.tcp.buffersize.wifi 4095,87380,174760,4096,16384,131072;
	setprop net.tcp.buffersize.umts 4094,87380,174760,4096,16384,131072;
	echo 262144 > /proc/sys/net/core/netdev_max_backlog;
	echo 262144 > /proc/sys/net/core/somaxconn;
	echo 65535 > /proc/sys/net/core/rmem_default;
	echo 174760 > /proc/sys/net/core/rmem_max;
	echo 65535 > /proc/sys/net/core/wmem_default;
	echo 131072 > /proc/sys/net/core/wmem_max;
	echo 4096 16384 131072 > /proc/sys/net/ipv4/tcp_wmem;
	echo 4096 87380 174760 > /proc/sys/net/ipv4/tcp_rmem;
	echo 15 > /proc/sys/net/ipv4/tcp_fin_timeout;
	echo 1200 > /proc/sys/net/ipv4/tcp_keepalive_time;
	echo 360000 > /proc/sys/net/ipv4/tcp_max_tw_buckets;
	echo 5 > /proc/sys/net/ipv4/tcp_reordering;
	echo 0 > /proc/sys/net/ipv4/tcp_slow_start_after_idle;
	echo 3 > /proc/sys/net/ipv4/tcp_syn_retries;
	echo 2 > /proc/sys/net/ipv4/tcp_synack_retries;
	echo 0 > /proc/sys/net/ipv4/tcp_timestamps;
	echo 1 > /proc/sys/net/ipv4/tcp_tw_recycle;
	echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse;
	echo 0 > /proc/sys/net/ipv4/tcp_window_scaling;
	log -p i -t SS4N1 "*** NETWORK *** applied WIFI and TCP tweaks";
fi;

AWAKE_MODE() # Screen-ON
{
# AVS Undervolting
if [ $SWITCH_UV -eq 1 ]; 
then
	if [ -e /sys/module/avs/parameters/avs_adjust ];
	then
		for i in $ALLFREQS;
		do
			eval echo \$A$i > /sys/module/avs/parameters/avs_adjust;
			usleep 50000;
		done;
		log -p i -t SS4N1 "*** AWAKE *** Screen-ON settings for undervolting CAVS kernel";
	fi;
	if [ -e /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs ]
	then
		TEMPMIN=`head -n1 /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs | awk '{print $2}'`;
		TEMPMAX=`head -n1 /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs | awk '{print $3}'`
		RESETMIN=`expr 950 "-" $TEMPMIN`;
		RESETMAX=`expr 975 "-" $TEMPMAX`;
		echo $RESETMIN $RESETMAX > /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs;
		echo "-$AWAKE_MIN_UV" "-$AWAKE_MAX_UV" > /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs;
		log -p i -t SS4N1 "*** AWAKE *** Screen-ON settings for undervolting HAVS kernel: min=$AWAKE_MIN_UV, max=$AWAKE_MAX_UV";
	fi;
fi;

# CPUfreq governor
if [ $SWITCH_CPUFREQ -eq 1 ]
then
	echo $AWAKE_GOVERNOR > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor;
	echo $AWAKE_MAX_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
	echo $AWAKE_MIN_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
	if [ -e /sys/devices/system/cpu/cpufreq/$AWAKE_GOVERNOR/up_threshold ];
	then
		echo $AWAKE_UP_THRESHOLD > /sys/devices/system/cpu/cpufreq/$AWAKE_GOVERNOR/up_threshold;
	fi;
	log -p i -t SS4N1 "*** AWAKE *** Screen-ON settings for CPUfreq governor, Gov=$AWAKE_GOVERNOR, Min=$AWAKE_MIN_FREQ, Max=$AWAKE_MAX_FREQ";
fi;

# CPU scheduler
if [ $SWITCH_CPUSCHED -eq 1 ]
then
	if [ -e /proc/sys/kernel/rr_interval ];
	then
		# BFS
		echo 1 > /proc/sys/kernel/rr_interval;
		echo 100 > /proc/sys/kernel/iso_cpu;
	else
		# CFS
		if [ -e /proc/sys/kernel/sched_latency_ns ];
		then
			echo 1000000 > /proc/sys/kernel/sched_latency_ns;
		fi;
		if [ -e /proc/sys/kernel/sched_wakeup_granularity_ns ];
		then
			echo 25000 > /proc/sys/kernel/sched_wakeup_granularity_ns;
		fi;
		if [ -e /proc/sys/kernel/sched_min_granularity_ns ];
		then
			echo 100000 > /proc/sys/kernel/sched_min_granularity_ns;
		fi;
		echo -1 > /proc/sys/kernel/sched_rt_runtime_us; 
		echo 100000 > /proc/sys/kernel/sched_rt_period_us;
		echo 95000 > /proc/sys/kernel/sched_rt_runtime_us;
	fi;
	log -p i -t SS4N1 "*** AWAKE *** Screen-ON settings for CPU scheduler";
fi;

# VM parameters
if [ $SWITCH_VM -eq 1 ]
then
	echo 30 > /proc/sys/vm/swappiness;
	echo 3000 > /proc/sys/vm/dirty_expire_centisecs;
	echo 500 > /proc/sys/vm/dirty_writeback_centisecs;
	echo 10 > /proc/sys/vm/dirty_background_ratio;
	echo 40 > /proc/sys/vm/dirty_ratio;
	echo 0 > /proc/sys/vm/page-cluster;
	echo 0 > /proc/sys/vm/laptop_mode;
	echo 300 > /proc/sys/vm/vfs_cache_pressure;
	echo 5120 > /proc/sys/vm/min_free_kbytes;
	log -p i -t SS4N1 "*** AWAKE *** Screen-ON settings for Virtual Memory";
fi;
}

SLEEP_MODE()# Screen-OFF
{
# CPUfreq governor
if [ $SWITCH_CPUFREQ -eq 1 ]
then
	echo $SLEEP_GOVERNOR > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor;
	echo $SLEEP_MIN_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
	echo $SLEEP_MAX_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
	if [ -e /sys/devices/system/cpu/cpufreq/$SLEEP_GOVERNOR/up_threshold ];
	then
		echo $SLEEP_UP_THRESHOLD > /sys/devices/system/cpu/cpufreq/$SLEEP_GOVERNOR/up_threshold;
	fi;
	log -p i -t SS4N1 "*** SLEEP *** Screen-OFF settings for CPUfreq governor, Gov=$SLEEP_GOVERNOR, Min=$SLEEP_MIN_FREQ, Max=$SLEEP_MAX_FREQ";
fi;

# CPU scheduler
if [ $SWITCH_CPUSCHED -eq 1 ]
then
	if [ -e /proc/sys/kernel/rr_interval ];
	then
		# BFS
		echo 7 > /proc/sys/kernel/rr_interval;
		echo 60 > /proc/sys/kernel/iso_cpu;
	else
		# CFS
		if [ -e /proc/sys/kernel/sched_latency_ns ];
		then
			echo 10000000 > /proc/sys/kernel/sched_latency_ns;
		fi;
		if [ -e /proc/sys/kernel/sched_wakeup_granularity_ns ];
		then
			echo 2000000 > /proc/sys/kernel/sched_wakeup_granularity_ns;
		fi;
		if [ -e /proc/sys/kernel/sched_min_granularity_ns ];
		then
			echo 750000 > /proc/sys/kernel/sched_min_granularity_ns;
		fi;
		echo -1 > /proc/sys/kernel/sched_rt_runtime_us;
		echo 1000000 > /proc/sys/kernel/sched_rt_period_us;
		echo 950000 > /proc/sys/kernel/sched_rt_runtime_us;
	fi;
	log -p i -t SS4N1 "*** SLEEP *** Screen-OFF settings for CPU scheduler";
fi;

# VM parameters
if [ $SWITCH_VM -eq 1 ]
then
	echo 0 > /proc/sys/vm/swappiness;
	echo 0 > /proc/sys/vm/dirty_expire_centisecs;
	echo 0 > /proc/sys/vm/dirty_writeback_centisecs;
	echo 60 > /proc/sys/vm/dirty_background_ratio;
	echo 95 > /proc/sys/vm/dirty_ratio;
	echo 3 > /proc/sys/vm/page-cluster;
	echo 5 > /proc/sys/vm/laptop_mode;
	echo 10 > /proc/sys/vm/vfs_cache_pressure;
	echo 2048 > /proc/sys/vm/min_free_kbytes;
	log -p i -t SS4N1 "*** SLEEP *** Screen-OFF settings for Virtual Memory";
fi;

# AVS Undervolting
if [ $SWITCH_UV -eq 1 ]; 
then
	if [ -e /sys/module/avs/parameters/avs_adjust ];
	then
		for i in $ALLFREQS;
		do
			eval echo \$S$i > /sys/module/avs/parameters/avs_adjust;
			usleep 50000;
		done;
		log -p i -t SS4N1 "*** SLEEP *** Screen-OFF settings for undervolting CAVS kernel";
	fi;
	if [ -e /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs ];
	then
		TEMPMIN=`head -n1 /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs | awk '{print $2}'`;
		TEMPMAX=`head -n1 /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs | awk '{print $3}'`;
		RESETMIN=`expr 950 "-" $TEMPMIN`;
		RESETMAX=`expr 975 "-" $TEMPMAX`;
		echo $RESETMIN $RESETMAX > /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs;
		echo "-$SLEEP_MIN_UV" "-$SLEEP_MAX_UV" > /sys/devices/system/cpu/cpu0/cpufreq/vdd_levels_havs;
		log -p i -t SS4N1 "*** SLEEP *** Screen-OFF settings for undervolting HAVS kernel: min=$SLEEP_MIN_UV, max=$SLEEP_MAX_UV";
	fi;
fi;
}

PROC_ADJUST()
{
pid=`pidof $1`;
if [ $pid ];
then
	if [ -e /proc/$pid/oom_score_adj ]; 
	then
		echo -1000 > /proc/$pid/oom_score_adj; # For 2.6.37+ 
	else
		echo -17 > /proc/$pid/oom_adj; # For 2.6.35
	fi;
	log -p i -t SS4N1 "*** OOM_ADJ *** exclude process $1 from OOM killer";
	if [ $2 ]
	then
		renice $2 $pid;
		log -p i -t SS4N1 "*** RENICE *** set renice level $2 for process $1";
	fi;
	exit;
else
	sleep 1;
	PROC_ADJUST $1 $2;
fi;
}

# Background process to check screen state
if [ $ENABLE_SWITCH -eq 1 ];
then
	ALLFREQS=`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies`;
	(while [ 1 ]; 
	do
		cat /sys/power/wait_for_fb_wake;
		AWAKE_MODE;

		cat /sys/power/wait_for_fb_sleep;
		SLEEP_MODE;
	done &)
fi;

# One-time background process to optimize com.android.phone
if [ $ENABLE_MAXPHONE -eq 1 ];
then 
	PROC_ADJUST "com.android.phone" "-20" &
fi;

# =========
# changelog
# =========
# Initial
# + port script from Spica to N1
#
# 20110329
# + added SD Card Speed Fix in TWEAK_STORAGE section
#
# 20110403
# + changed deprecated oom_adj to oom_score_adj for MAX_PHONE function and sscfg
#
# 20110403A
# + added auto-check of kernel version for oom-killer parameter for MAX_PHONE function and sscfg
#
# 20110404
# + changed from init.d script to init.local.rc service to fix "hung-on-X" when not running dt-a2sd
#
# 20110408
# + added CFS tunables for awake/sleep modes in SWITCH_CPUSCHED sections
#
# 20110505
# + modified to apply UV for HAVS (Tiamat, SavagedZen, new-IR) and CAVS (old-IR) 
#
# 20110519
# + added option for new interactiveX governor
# + removed tweaks for TCP/IP redirects
#
# 20110524
# + disabled dewonkifier feature in all preset profiles (thx 2 jyxent!)
# + tuned preset profiles to more conservative undervolt values
# + added option to display HAVS Min & Max VDD levels (CPU voltage table)
# + added option to display misc information (CPU info, kernel version, etc)
